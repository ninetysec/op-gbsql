-- auto gen by jerry 2016-11-20 09:21:46
drop view if EXISTS v_player_deposit;

CREATE OR REPLACE VIEW v_player_deposit AS
 SELECT a.id,
    a.player_id,
    a.username,
    a.rank_id,
    a.create_time,
    a.recharge_type,
    a.is_first_recharge,
    a.payer_bank,
    a.payer_bankcard,
    a.bank_order,
    a.recharge_address,
    a.pay_account_id,
    a.bank_code,
    a.full_name,
    a.counter_fee,
    a.default_currency,
    a.recharge_amount,
    a.recharge_total_amount,
    a.check_status,
    a.recharge_status,
    a.check_user_id,
    a.check_username,
    a.check_time,
    a.payer_name,
    a.transaction_no,
    a.custom_bank_name,
    a.account,
    a.recharge_type_parent,
    a.check_remark,
    a.failure_title,
    a.pay_account_status,
    a.deposit_count,
    a.recharge_count,
    a.ip_deposit,
    a.ip_dict_code,
    a.pay_url,
    a.origin,
    a.pay_name,
    ra.rank_name,
    ra.risk_marker,
    a.account_type,
    a.channel_json
   FROM (( SELECT pr.id,
            pr.player_id,
            su.username,
                CASE
                    WHEN (pt.rank_id IS NULL) THEN up.rank_id
                    ELSE pt.rank_id
                END AS rank_id,
            pr.create_time,
            pr.recharge_type,
            pr.is_first_recharge,
            pr.payer_bank,
            pr.payer_bankcard,
            pr.bank_order,
            pr.recharge_address,
            pr.pay_account_id,
            pa.bank_code,
            pa.full_name,
            pr.counter_fee,
            su.default_currency,
            pr.recharge_amount,
            pr.recharge_total_amount,
            pr.check_status,
            pr.recharge_status,
            pr.check_user_id,
            pr.check_username,
            pr.check_time,
            pr.payer_name,
            pr.transaction_no,
            pa.custom_bank_name,
            pa.account,
            pr.recharge_type_parent,
            pr.check_remark,
            pr.failure_title,
            pa.status AS pay_account_status,
            pa.deposit_count,
            up.recharge_count,
            pr.ip_deposit,
            pr.ip_dict_code,
            pr.pay_url,
            pt.origin,
            pa.pay_name,
            pa.account_type,
            pa.channel_json
           FROM ((((player_recharge pr
             LEFT JOIN sys_user su ON ((pr.player_id = su.id)))
             LEFT JOIN user_player up ON ((pr.player_id = up.id)))
             LEFT JOIN pay_account pa ON ((pr.pay_account_id = pa.id)))
             LEFT JOIN player_transaction pt ON (((pr.transaction_no)::text = (pt.transaction_no)::text)))) a
     LEFT JOIN player_rank ra ON ((ra.id = a.rank_id)));

COMMENT ON VIEW v_player_deposit IS 'Fei - 玩家存款列表视图';

DROP VIEW IF EXISTS v_player_withdraw;
CREATE OR REPLACE VIEW v_player_withdraw AS
 SELECT a.id,
    a.player_id,
    a.player_transaction_id,
    a.transaction_no,
    a.current_account_amount,
    a.current_return_zero_amount,
    a.current_backflush_amount,
    a.withdraw_monetary,
    a.withdraw_amount,
    a.withdraw_remark,
    a.deduct_favorable,
    a.counter_fee,
    a.administrative_fee,
    a.is_deduct_audit,
    a.deduct_audit_recharge_amount,
    a.deduct_audit_recharge_index,
    a.deduct_audit_favorable_amount,
    a.deduct_audit_favorable_index,
    a.withdraw_type,
    a.create_time,
    a.payee_bank,
    a.payee_bankcard,
    a.payee_name,
    a.withdraw_status,
    a.check_status,
    a.check_time,
    a.check_user_id,
    a.check_remark,
    a.is_clear_audit,
    a.is_warn,
    a.check_closing_time,
    a.withdraw_type_parent,
    a.withdraw_actual_amount,
    a.play_money_time,
    a.play_money_user,
    a.reason_content,
    a.artificial_reason_content,
    a.is_lock,
    a.lock_person_id,
    a.is_satisfy_audit,
    a.artificial_reason_title,
    a.reason_title,
    a.ip_withdraw,
    a.ip_dict_code,
    a.success_count,
    a.closing_time,
    a.remark,
    a.username,
    a.check_user_name,
    a.rank_id,
    a.region,
    a.nation,
    a.country,
    a.city,
    a.real_name,
    a.register_time,
    a.status,
    a.agent_name,
    a.general_agent_name,
    a.lock_person_name,
    a.agent_id,
    a.origin,
    pr.risk_marker,
    pr.rank_name,
    ((a.deduct_favorable + a.counter_fee) + a.administrative_fee) AS deduct_sum
   FROM (( SELECT t1.id,
            t1.player_id,
            t1.player_transaction_id,
            t1.transaction_no,
            t1.current_account_amount,
            t1.current_return_zero_amount,
            t1.current_backflush_amount,
            t1.withdraw_monetary,
            t1.withdraw_amount,
            t1.withdraw_remark,
            t1.deduct_favorable,
            t1.counter_fee,
            t1.administrative_fee,
            t1.is_deduct_audit,
            t1.deduct_audit_recharge_amount,
            t1.deduct_audit_recharge_index,
            t1.deduct_audit_favorable_amount,
            t1.deduct_audit_favorable_index,
            t1.withdraw_type,
            t1.create_time,
            t1.payee_bank,
            t1.payee_bankcard,
            t1.payee_name,
            t1.withdraw_status,
            t1.check_status,
            t1.check_time,
            t1.check_user_id,
            t1.check_remark,
            t1.is_clear_audit,
            t1.is_warn,
            t1.check_closing_time,
            t1.withdraw_type_parent,
            t1.withdraw_actual_amount,
            t1.play_money_time,
            t1.play_money_user,
            t1.reason_content,
            t1.artificial_reason_content,
            t1.is_lock,
            t1.lock_person_id,
            t1.is_satisfy_audit,
            t1.artificial_reason_title,
            t1.reason_title,
            t1.ip_withdraw,
            t1.ip_dict_code,
            t4.withdraw_count AS success_count,
            (date_part('epoch'::text, ((t1.check_closing_time)::timestamp with time zone - now())) / (60)::double precision) AS closing_time,
            p.remark,
            t2.username,
            t3.username AS check_user_name,
                CASE
                    WHEN (t1.rank_id IS NULL) THEN t4.rank_id
                    ELSE t1.rank_id
                END AS rank_id,
            t2.region,
            t2.nation,
            t2.country,
            t2.city,
            t2.real_name,
            t2.create_time AS register_time,
            t2.status,
            t6.username AS agent_name,
            t9.username AS general_agent_name,
            t10.username AS lock_person_name,
            t6.id AS agent_id,
            p.origin
           FROM (((((((player_withdraw t1
             LEFT JOIN user_player t4 ON ((t4.id = t1.player_id)))
             LEFT JOIN sys_user t2 ON ((t4.id = t2.id)))
             LEFT JOIN player_transaction p ON ((t1.player_transaction_id = p.id)))
             LEFT JOIN sys_user t3 ON ((t1.check_user_id = t3.id)))
             LEFT JOIN sys_user t6 ON ((t6.id = t2.owner_id)))
             LEFT JOIN sys_user t10 ON ((t10.id = t1.lock_person_id)))
             LEFT JOIN sys_user t9 ON ((t9.id = t6.owner_id)))) a
     LEFT JOIN player_rank pr ON ((a.rank_id = pr.id)));

COMMENT ON VIEW v_player_withdraw IS '玩家交易表视图 edit by river重建';

